name: CI - Windows

on: [pull_request, push]

permissions: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: ${{ github.head_ref != '' }}

jobs:
  ci:
    name: Build
    runs-on: windows-latest
    permissions:
      actions: write

    strategy:
      fail-fast: false

    env:
      vcpkg_path: "c:/vcpkg"
      qsp_path: "${{ github.workspace }}/../qsp"
      install_path: "${{ github.workspace }}/../install"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup devcmd
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install build tools
        run: |
          if ((Get-Command "ninja.exe" -ErrorAction SilentlyContinue) -eq $null)
          {
             choco install ninja
          }
          where.exe ninja
          ninja --version

      # https://learn.microsoft.com/en-us/vcpkg/users/binarycaching#gha
      - name: Set variables for vcpkg
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', (process.env.ACTIONS_CACHE_URL || ''));
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', (process.env.ACTIONS_RUNTIME_TOKEN || ''));

      - name: Install dependencies with vcpkg
        run: |
          $packages = `
            "oniguruma"
          ${{ env.vcpkg_path }}/vcpkg.exe install `
            --binarysource="clear;x-gha,readwrite" `
            --clean-after-build `
            $packages

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: "6.9.2"
          arch: win64_msvc2022_64
          modules: qtwebengine qtmultimedia qtwebchannel qtwebview qtimageformats qtpositioning
          cache: true

      - name: Install qsp
        run: |
          git clone `
            --depth 1 `
            https://github.com/QSPFoundation/qsp.git `
            ${{ env.qsp_path }}
          cd ${{ env.qsp_path }}
          cmake `
            -B build `
            -G "Ninja" `
            -DBUILD_SHARED_LIBS=ON `
            -DCMAKE_BUILD_TYPE=RelWithDebInfo `
            -DCMAKE_TOOLCHAIN_FILE="${{ env.vcpkg_path }}/scripts/buildsystems/vcpkg.cmake" `
            -DUSE_INSTALLED_ONIGURUMA:BOOL=ON
          cmake --build build

      - name: Build Qqsp
        run: |
          $env:CXXFLAGS+="/DQT_FORCE_ASSERTS /WX"
          cmake `
            -B build `
            -G "Ninja" `
            -DCMAKE_BUILD_TYPE=RelWithDebInfo `
            -DCMAKE_INSTALL_PREFIX="${{ env.install_path }}" `
            -DCMAKE_TOOLCHAIN_FILE="${{ env.vcpkg_path }}/scripts/buildsystems/vcpkg.cmake" `
            -DQsp_DIR="${{ env.qsp_path }}/build"
          cmake --build build

      - name: Prepare build artifacts
        run: |
          cmake --install build
          cd build
          cpack -G 7Z build
          cd ..
          mkdir upload
          copy build/qqsp-*-win64.7z upload

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Qqsp-CI_Windows-x64
          path: upload
